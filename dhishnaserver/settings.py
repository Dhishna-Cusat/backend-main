"""
Django settings for dhishnaserver project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import sys
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!6q()h)8ka7f+x&l!rg0i7=84fts%ahr%&uq^3!k0xr6*r&bjl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DHISHNA_DEBUG'))

ALLOWED_HOSTS = ['api.dhishna.org', '54.174.47.3', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'home'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'home.middleware.FirebaseTokenMiddleware',
    'corsheaders.middleware.CorsMiddleware',

]

CORS_ALLOWED_ORIGINS = [
    "https://127.0.0.1:8000",
    "http://localhost:3000",
    "https://dhishna.org",
    "https://ca.dhishna.org",
    "https://workshops.dhishna.org",
]

CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']

# Allow cookies to be included in cross-origin requests
CORS_ALLOW_CREDENTIALS = True



ROOT_URLCONF = 'dhishnaserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dhishnaserver.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'dhishna',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',  # Use 'localhost' if the database is on your local machine
        'PORT': '',  # Leave empty to use the default PostgreSQL port (5432)
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# projectname/settings.py

CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Set your broker URL

# Configure celery beat to schedule periodic tasks
CELERY_BEAT_SCHEDULE = {
    'your_task_name': {
        'task': 'home.tasks.fetch_and_update',  # Update with your actual task
        'schedule': timedelta(minutes=30),  # Adjust the interval as needed
    },
}


EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
EMAIL_HOST = 'smtppro.zoho.in'
EMAIL_PORT = 465
EMAIL_USE_TLS = True


if os.environ.get('EMAIL_ACCOUNT_USER1') is None or os.environ.get('EMAIL_ACCOUNT_PASSWORD1') is None:
    print("set environment variables EMAIL_ACCOUNT_USER1 and EMAIL_ACCOUNT_PASSWORD1")

EMAIL_HOST_USER_ACCOUNT1 = os.environ.get('EMAIL_ACCOUNT_USER1')

EMAIL_HOST_PASSWORD_ACCOUNT1 =  os.environ.get('EMAIL_ACCOUNT_PASSWORD1')
